// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SpecificationGenerator is an autogenerated mock type for the SpecificationGenerator type
type SpecificationGenerator struct {
	mock.Mock
}

// GenerateSpecification provides a mock function with given fields: specificationPath
func (_m *SpecificationGenerator) GenerateSpecification(specificationPath string) error {
	ret := _m.Called(specificationPath)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(specificationPath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSpecificationGenerator interface {
	mock.TestingT
	Cleanup(func())
}

// NewSpecificationGenerator creates a new instance of SpecificationGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSpecificationGenerator(t mockConstructorTestingTNewSpecificationGenerator) *SpecificationGenerator {
	mock := &SpecificationGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
